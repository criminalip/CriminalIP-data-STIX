import re
from datetime import datetime, timedelta
from stix2 import (Malware,URL,Relationship)

today = datetime.today()
thirty_days_ago = today - timedelta(days=30)

class MalwareInfoCase:
    def __init__(self):
        pass
    
    def process_tag(self,tag):
        if tag == 'Colbalt Strike' or tag == 'C2':
            return Malware(
                name=tag, 
                description=f"A {tag} was currently found on the page of this port. It's detected as a dangerous site, so it looks like it needs to be blocked.", 
                labels=['c2'],
                is_family=False
                )
        else:
            return Malware(
                name=tag, 
                description=f"A {tag} was currently found on the page of this port. It's detected as a dangerous site, so it looks like it needs to be blocked.", 
                labels=['malicious'],
                is_family=False
                )

    def malware_case1(self,banner,tags_string):
        malware_case1_object = []
        url_object = []
        malware_case_url_relate = []
        tags_to_check = ['Malicious', 'Cobalt Strike','C2']
        pattern = re.compile('<title>(.*?)</title>')
        parsed_string = re.search(pattern,banner)
        
        if parsed_string:
            extracted_string = parsed_string.group(1)
        else:
            extracted_string = ""  
                 
        if any(tag in tags_to_check for tag in tags_string): 
                tags_string = ', '.join(tags_string)   
                malware_case1_object.append(self.process_tag(tags_string))
                
        if malware_case1_object:
            url_obj = URL(value = extracted_string)
            url_object.append(url_obj)
            url_relationship =Relationship(
                relationship_type="exploits",
                source_ref=malware_case1_object[0].id, 
                target_ref=url_obj.id
                )
            malware_case_url_relate.append(url_relationship)

        return malware_case1_object,url_object,malware_case_url_relate